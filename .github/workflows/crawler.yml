name: Hot News Crawler

on:
  schedule:
    # 北京时间 08:00 / 12:00 / 18:00 （UTC 分别为 00:00 / 04:00 / 10:00）
    - cron: "0 0 * * *"
    - cron: "0 4 * * *"
    - cron: "0 10 * * *"
  workflow_dispatch:

# 同一分支只允许一个实例并发，避免互相覆盖
concurrency:
  group: auto-update-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: write

jobs:
  crawl:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 为 rebase 准备完整历史

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Verify required files
        run: |
          echo "🔍 检查必需的配置文件..."
          if [ ! -f config/config.yaml ]; then
            echo "❌ 错误: config/config.yaml 文件不存在"; exit 1
          fi
          if [ ! -f config/frequency_words.txt ]; then
            echo "❌ 错误: config/frequency_words.txt 文件不存在"; exit 1
          fi
          echo "✅ 配置文件检查通过"

      - name: Run crawler
        env:
          FEISHU_WEBHOOK_URL: ${{ secrets.FEISHU_WEBHOOK_URL }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          DINGTALK_WEBHOOK_URL: ${{ secrets.DINGTALK_WEBHOOK_URL }}
          WEWORK_WEBHOOK_URL: ${{ secrets.WEWORK_WEBHOOK_URL }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_TO: ${{ secrets.EMAIL_TO }}
          EMAIL_SMTP_SERVER: ${{ secrets.EMAIL_SMTP_SERVER }}
          EMAIL_SMTP_PORT: ${{ secrets.EMAIL_SMTP_PORT }}
          NTFY_TOPIC: ${{ secrets.NTFY_TOPIC }}
          NTFY_SERVER_URL: ${{ secrets.NTFY_SERVER_URL }}
          NTFY_TOKEN: ${{ secrets.NTFY_TOKEN }}
          GITHUB_ACTIONS: true
        run: python main.py

      - name: Commit and push if changes
        env:
          BRANCH_NAME: ${{ github.ref_name }}   # 自动识别当前分支（master/main 均可）
        run: |
          set -e
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

          git add -A
          if git diff --quiet && git diff --staged --quiet; then
            echo "✅ 没有需要提交的变更"; exit 0
          fi

          git commit -m "Auto update by GitHub Actions at $(TZ=Asia/Shanghai date '+%Y-%m-%d %H:%M:%S')"

          # 关键：先同步再推送，避免 “fetch first”
          git pull --rebase --autostash origin "$BRANCH_NAME"

          # 推送带一次重试，进一步稳妥
          if ! git push origin "$BRANCH_NAME"; then
            echo "⚠️ 首次推送失败，重试一次..."
            sleep 3
            git pull --rebase --autostash origin "$BRANCH_NAME"
            git push origin "$BRANCH_NAME"
          fi
